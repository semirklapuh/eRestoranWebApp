// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.EF;

namespace WebApplication1.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication1.Models.DatumMjesec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Godina");

                    b.Property<int>("Mjesec");

                    b.HasKey("Id");

                    b.ToTable("DatumMjesec");
                });

            modelBuilder.Entity("WebApplication1.Models.Dolasci", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Dolazak");

                    b.Property<DateTime?>("Odlazak");

                    b.Property<int?>("SatiRadio");

                    b.Property<int>("ZaposlenikId");

                    b.HasKey("Id");

                    b.HasIndex("ZaposlenikId");

                    b.ToTable("Dolasci");
                });

            modelBuilder.Entity("WebApplication1.Models.Dostava", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DatumVrijemeDostave");

                    b.Property<DateTime>("DatumVrijemeSlanja");

                    b.Property<int>("NarudzbaId");

                    b.Property<int>("StatusDostaveId");

                    b.HasKey("Id");

                    b.HasIndex("NarudzbaId");

                    b.HasIndex("StatusDostaveId");

                    b.ToTable("Dostava");
                });

            modelBuilder.Entity("WebApplication1.Models.Grad", b =>
                {
                    b.Property<int>("GradId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv");

                    b.Property<int>("PostanskiBroj");

                    b.HasKey("GradId");

                    b.ToTable("Grad");
                });

            modelBuilder.Entity("WebApplication1.Models.ImaSastojke", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("JeloId");

                    b.Property<int>("SastojciId");

                    b.HasKey("Id");

                    b.HasIndex("JeloId");

                    b.HasIndex("SastojciId");

                    b.ToTable("ImaSastojke");
                });

            modelBuilder.Entity("WebApplication1.Models.Jelo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Cijena");

                    b.Property<string>("JedinicaMjere");

                    b.Property<string>("Naziv")
                        .IsRequired();

                    b.Property<string>("Opis");

                    b.Property<string>("Slika");

                    b.Property<int>("VrstaJelaID");

                    b.HasKey("Id");

                    b.HasIndex("VrstaJelaID");

                    b.ToTable("Jelo");
                });

            modelBuilder.Entity("WebApplication1.Models.KorisnickiNalog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KorisnickoIme");

                    b.Property<string>("Lozinka");

                    b.HasKey("Id");

                    b.ToTable("KorisnickiNalog");
                });

            modelBuilder.Entity("WebApplication1.Models.Narucilac", b =>
                {
                    b.Property<int>("NarucilacId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa");

                    b.Property<string>("Email");

                    b.Property<int>("GradId");

                    b.Property<string>("ImePrezime");

                    b.Property<int?>("KorisnickiNalogId");

                    b.Property<string>("Telefon");

                    b.HasKey("NarucilacId");

                    b.HasIndex("GradId");

                    b.HasIndex("KorisnickiNalogId");

                    b.ToTable("Narucilac");
                });

            modelBuilder.Entity("WebApplication1.Models.Narudzba", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumNarudzbe");

                    b.Property<int>("NarucilacId");

                    b.HasKey("Id");

                    b.HasIndex("NarucilacId");

                    b.ToTable("Narudzba");
                });

            modelBuilder.Entity("WebApplication1.Models.NarudzbaStavke", b =>
                {
                    b.Property<int>("JeloId");

                    b.Property<int>("NarudzbaId");

                    b.Property<float>("Cijena");

                    b.Property<int>("Kolicina");

                    b.HasKey("JeloId", "NarudzbaId");

                    b.HasIndex("NarudzbaId");

                    b.ToTable("NarudzbaStavke");
                });

            modelBuilder.Entity("WebApplication1.Models.Obavijest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum");

                    b.Property<string>("Naziv");

                    b.Property<string>("Sadrzaj");

                    b.Property<int>("ZaposlenikId");

                    b.HasKey("Id");

                    b.HasIndex("ZaposlenikId");

                    b.ToTable("Obavijest");
                });

            modelBuilder.Entity("WebApplication1.Models.Plata", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum");

                    b.Property<float>("Iznos");

                    b.Property<int>("ZaposlenikId");

                    b.HasKey("Id");

                    b.HasIndex("ZaposlenikId");

                    b.ToTable("Plata");
                });

            modelBuilder.Entity("WebApplication1.Models.RadnoMjesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv");

                    b.Property<string>("Opis");

                    b.HasKey("Id");

                    b.ToTable("RadnoMjesto");
                });

            modelBuilder.Entity("WebApplication1.Models.Rezervacija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumEvidencije");

                    b.Property<DateTime>("DatumRezervacije");

                    b.Property<int>("NarucilacId");

                    b.Property<string>("Naziv");

                    b.HasKey("Id");

                    b.HasIndex("NarucilacId");

                    b.ToTable("Rezervacija");
                });

            modelBuilder.Entity("WebApplication1.Models.RezervacijaStavke", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RezervacijaId");

                    b.Property<int>("StolId");

                    b.HasKey("Id");

                    b.HasIndex("RezervacijaId");

                    b.HasIndex("StolId");

                    b.ToTable("RezervacijaStavke");
                });

            modelBuilder.Entity("WebApplication1.Models.Sastojci", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv");

                    b.Property<string>("Opis");

                    b.HasKey("Id");

                    b.ToTable("Sastojci");
                });

            modelBuilder.Entity("WebApplication1.Models.StatusDostave", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Opis");

                    b.HasKey("Id");

                    b.ToTable("StatusDostave");
                });

            modelBuilder.Entity("WebApplication1.Models.Stol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojMjesta");

                    b.HasKey("Id");

                    b.ToTable("Stol");
                });

            modelBuilder.Entity("WebApplication1.Models.VrstaJela", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv");

                    b.HasKey("Id");

                    b.ToTable("VrstaJela");
                });

            modelBuilder.Entity("WebApplication1.Models.Zaposlenik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa");

                    b.Property<DateTime>("DatumRodjenja");

                    b.Property<string>("Email");

                    b.Property<int>("GradId");

                    b.Property<string>("Ime");

                    b.Property<string>("JMBG");

                    b.Property<int>("KorisnickiNalogId");

                    b.Property<string>("Prezime");

                    b.Property<int>("RadnoMjestoId");

                    b.Property<string>("Telefon");

                    b.HasKey("Id");

                    b.HasIndex("GradId");

                    b.HasIndex("KorisnickiNalogId");

                    b.HasIndex("RadnoMjestoId");

                    b.ToTable("Zaposlenik");
                });

            modelBuilder.Entity("WebApplication1.Models.Dolasci", b =>
                {
                    b.HasOne("WebApplication1.Models.Zaposlenik", "Zaposlenik")
                        .WithMany()
                        .HasForeignKey("ZaposlenikId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication1.Models.Dostava", b =>
                {
                    b.HasOne("WebApplication1.Models.Narudzba", "Narudzba")
                        .WithMany()
                        .HasForeignKey("NarudzbaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication1.Models.StatusDostave", "StatusDostave")
                        .WithMany()
                        .HasForeignKey("StatusDostaveId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication1.Models.ImaSastojke", b =>
                {
                    b.HasOne("WebApplication1.Models.Jelo", "Jelo")
                        .WithMany()
                        .HasForeignKey("JeloId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication1.Models.Sastojci", "Sastojci")
                        .WithMany()
                        .HasForeignKey("SastojciId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication1.Models.Jelo", b =>
                {
                    b.HasOne("WebApplication1.Models.VrstaJela", "VrstaJela")
                        .WithMany()
                        .HasForeignKey("VrstaJelaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication1.Models.Narucilac", b =>
                {
                    b.HasOne("WebApplication1.Models.Grad", "Grad")
                        .WithMany()
                        .HasForeignKey("GradId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication1.Models.KorisnickiNalog", "KorisnickiNalog")
                        .WithMany()
                        .HasForeignKey("KorisnickiNalogId");
                });

            modelBuilder.Entity("WebApplication1.Models.Narudzba", b =>
                {
                    b.HasOne("WebApplication1.Models.Narucilac", "Narucilac")
                        .WithMany()
                        .HasForeignKey("NarucilacId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication1.Models.NarudzbaStavke", b =>
                {
                    b.HasOne("WebApplication1.Models.Jelo", "Jelo")
                        .WithMany()
                        .HasForeignKey("JeloId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication1.Models.Narudzba", "Narudzba")
                        .WithMany()
                        .HasForeignKey("NarudzbaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication1.Models.Obavijest", b =>
                {
                    b.HasOne("WebApplication1.Models.Zaposlenik", "Zaposlenik")
                        .WithMany()
                        .HasForeignKey("ZaposlenikId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication1.Models.Plata", b =>
                {
                    b.HasOne("WebApplication1.Models.Zaposlenik", "Zaposlenik")
                        .WithMany()
                        .HasForeignKey("ZaposlenikId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication1.Models.Rezervacija", b =>
                {
                    b.HasOne("WebApplication1.Models.Narucilac", "Narucilac")
                        .WithMany()
                        .HasForeignKey("NarucilacId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication1.Models.RezervacijaStavke", b =>
                {
                    b.HasOne("WebApplication1.Models.Rezervacija", "Rezervacija")
                        .WithMany()
                        .HasForeignKey("RezervacijaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication1.Models.Stol", "Stol")
                        .WithMany()
                        .HasForeignKey("StolId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication1.Models.Zaposlenik", b =>
                {
                    b.HasOne("WebApplication1.Models.Grad", "Grad")
                        .WithMany()
                        .HasForeignKey("GradId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication1.Models.KorisnickiNalog", "KorisnickiNalog")
                        .WithMany()
                        .HasForeignKey("KorisnickiNalogId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication1.Models.RadnoMjesto", "RadnoMjesto")
                        .WithMany()
                        .HasForeignKey("RadnoMjestoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
